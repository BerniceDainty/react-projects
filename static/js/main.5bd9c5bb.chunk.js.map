{"version":3,"sources":["hooks/useWordGame.js","App.js","index.js"],"names":["useWordGame","starTime","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunnning","setIsTimeRunning","wordCount","setWordCount","textboxRef","useRef","handleChange","event","value","target","calculateWordCount","wordsTyped","trim","split","filter","word","length","startGame","current","disabled","focus","endGame","useEffect","setTimeout","App","ref","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"2JAqDeA,MAnDf,WAAqC,IAAhBC,EAAe,uDAAJ,GAE5B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAASD,GAAnD,mBAAOI,EAAP,KAAsBC,EAAtB,KACA,EAA2CJ,oBAAS,GAApD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACMC,EAAaC,iBAAO,MAE1B,SAASC,EAAaC,GAClB,IAAOC,EAASD,EAAME,OAAfD,MACPX,EAAQW,GAGZ,SAASE,EAAmBC,GAExB,OADsBA,EAAWC,OAAOC,MAAM,KAAKC,QAAO,SAAAC,GAAI,MAAW,KAAPA,KAC7CC,OAGzB,SAASC,IACLlB,EAAiBL,GACjBO,GAAiB,GACjBE,EAAa,GACbN,EAAQ,IACRO,EAAWc,QAAQC,UAAW,EAM9Bf,EAAWc,QAAQE,QAGvB,SAASC,IACLpB,GAAiB,GACjBE,EAAaO,EAAmBd,IAapC,OAVA0B,qBAAU,WACHtB,GAAkBF,EAAgB,EACjCyB,YAAW,WACPxB,GAAiB,SAACD,GAAD,OAAmBA,EAAc,OACnD,KACsB,IAAlBA,GACPuB,MAEL,CAACvB,EAAeE,IAEZ,CAACI,aAAYE,eAAcV,OAAMI,iBAAgBF,gBAAemB,YAAWf,c,OClBvEsB,MA5Bf,WAEI,MAQI/B,EAAY,GAPZW,EADJ,EACIA,WACAE,EAFJ,EAEIA,aACAV,EAHJ,EAGIA,KACAI,EAJJ,EAIIA,eACAF,EALJ,EAKIA,cACAmB,EANJ,EAMIA,UACAf,EAPJ,EAOIA,UAGJ,OACI,gCACI,uDACA,0BACIuB,IAAOrB,EACPsB,SAAYpB,EACZE,MAASZ,EACTuB,UAAanB,IAEjB,kDAAqBF,KACrB,wBAAQ6B,QAAWV,EAAWE,SAAUnB,EAAxC,mBACA,8CAAiBE,S,MCrB7B0B,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.5bd9c5bb.chunk.js","sourcesContent":["import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useWordGame(starTime = 10) {\r\n\r\n    const [text, setText] = useState('')\r\n    const [timeRemaining, setTimeRemaining] = useState(starTime)\r\n    const [isTimeRunnning, setIsTimeRunning] = useState(false)\r\n    const [wordCount, setWordCount] = useState(0)\r\n    const textboxRef = useRef(null)\r\n\r\n    function handleChange(event) {\r\n        const {value} = event.target\r\n        setText(value)\r\n    }\r\n\r\n    function calculateWordCount(wordsTyped) {\r\n        const filteredWords = wordsTyped.trim().split(' ').filter(word => word!=='')\r\n        return filteredWords.length\r\n    }\r\n\r\n    function startGame() {\r\n        setTimeRemaining(starTime)\r\n        setIsTimeRunning(true)\r\n        setWordCount(0)\r\n        setText('')\r\n        textboxRef.current.disabled = false\r\n        /**\r\n         * The above code enables the input box manually because, all the react methods are performed\r\n         * asynchronously which in our code makes the below line of focusing the textbox useless as the\r\n         * textbox is not enabled ((i.e) isTimeRunning is still 'false' when the below line executes)\r\n         */\r\n        textboxRef.current.focus()\r\n    }\r\n\r\n    function endGame() {\r\n        setIsTimeRunning(false)\r\n        setWordCount(calculateWordCount(text))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isTimeRunnning && timeRemaining > 0) {\r\n            setTimeout(()=>{\r\n                setTimeRemaining((timeRemaining) => timeRemaining-1)\r\n            }, 1000)\r\n        } else if (timeRemaining === 0) {\r\n            endGame()\r\n        }\r\n    }, [timeRemaining, isTimeRunnning] )\r\n\r\n    return {textboxRef, handleChange, text, isTimeRunnning, timeRemaining, startGame, wordCount}\r\n\r\n}\r\n\r\nexport default useWordGame","import React from \"react\"\r\nimport useWordGame from \"./hooks/useWordGame\"\r\n\r\nfunction App() {\r\n\r\n    const {\r\n        textboxRef,\r\n        handleChange,\r\n        text,\r\n        isTimeRunnning,\r\n        timeRemaining,\r\n        startGame,\r\n        wordCount\r\n    } = useWordGame(5)\r\n\r\n    return (\r\n        <div>\r\n            <h1>How fast do you type?</h1>\r\n            <textarea \r\n                ref = {textboxRef}\r\n                onChange = {handleChange}\r\n                value = {text}\r\n                disabled = {!isTimeRunnning}\r\n            />\r\n            <h4>Time remaining: {timeRemaining}</h4>\r\n            <button onClick = {startGame} disabled={isTimeRunnning}>Start</button>\r\n            <h1>Word count: {wordCount}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"))"],"sourceRoot":""}